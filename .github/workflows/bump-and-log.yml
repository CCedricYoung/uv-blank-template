name: Bump and Log

on:
  pull_request:
    types: [closed]

permissions:
  contents: write

jobs:
  on-merge:
    if: ${{ github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.base.ref }}
          persist-credentials: true
      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@d0cc045d04ccac9d8b7881df0226f9e82c39688e # v6
        with:
          version: "latest"
      - name: Sync Python 3.14 runtime
        run: |
          uv sync -p 3.14

      - name: Configure git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Resolve merge commit SHA
        env:
          MERGE_COMMIT_SHA_FROM_EVENT: ${{ github.event.pull_request.merge_commit_sha }}
        run: |
          echo "MERGE_SHA=${MERGE_COMMIT_SHA_FROM_EVENT}" >> "$GITHUB_ENV"

      - name: Extract commit title and body
        run: |
          set -euo pipefail
          TITLE=$(git show -s --format=%s "$MERGE_SHA")
          BODY=$(git show -s --format=%b "$MERGE_SHA")
          # Use single-quoted heredoc markers so special characters are preserved safely
          echo "CHANGELOG_TITLE<<'EOF'" >> "$GITHUB_ENV"
          printf '%s\n' "$TITLE" >> "$GITHUB_ENV"
          echo "EOF" >> "$GITHUB_ENV"
          echo "CHANGELOG_BODY<<'EOF'" >> "$GITHUB_ENV"
          printf '%s\n' "$BODY" >> "$GITHUB_ENV"
          echo "EOF" >> "$GITHUB_ENV"

      - name: Compute next semver using uv
        run: |
          set -euo pipefail
          NEXT=$(uv version --bump patch)
          NEXT=${NEXT#v}
          echo "NEXT_TAG=$NEXT" >> "$GITHUB_ENV"

      - name: Prepend changelog entry
        env:
          TAG: ${{ env.NEXT_TAG }}
          TITLE: ${{ env.CHANGELOG_TITLE }}
          BODY: ${{ env.CHANGELOG_BODY }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          BASE_REF: ${{ github.event.pull_request.base.ref }}
        run: |
          set -euo pipefail
          [ -f CHANGELOG.md ] || printf '# Changelog\n\n' > CHANGELOG.md
          DATE=$(date +%F)
          TMP="$(mktemp)"
          {
            # Header: version, title and ISO date
            printf '# %s %s (%s)\n' "$TAG" "$TITLE" "$DATE"
            # Body (if present) and a separating blank line
            if [ -n "$BODY" ]; then
              printf '%s\n' "$BODY"
            fi
            printf '\n'
            # Append existing changelog content
            cat CHANGELOG.md
          } > "$TMP"
          mv "$TMP" CHANGELOG.md
          git add CHANGELOG.md
          if ! git diff --cached --quiet; then
            git commit -m "chore(changelog): add entry for PR #${PR_NUMBER} - ${TITLE}"
            git push origin HEAD:"${BASE_REF}"
          fi
