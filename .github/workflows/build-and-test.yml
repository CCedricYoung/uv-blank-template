name: Build and test

on:
  push:
  pull_request:
    # Only run for these pull request actions. Exclude 'closed' so merged PRs
    # (which trigger a 'closed' action with `merged: true`) won't run this
    # workflow via the pull_request event.
    types: [opened, synchronize, reopened, ready_for_review]

jobs:
  build:
    name: Build
    # Skip for merges since this will be invoked by the commit from the bump-and-log workflow
    if: ${{ !(github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true) && !(github.event_name == 'push' && contains(github.head_commit.message, 'Merge pull request')) }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@d0cc045d04ccac9d8b7881df0226f9e82c39688e # v6
        with:
          version: "latest"
      - name: Sync Python runtime and install deps (dev)
        run: |
          uv sync --dev
      - name: run pre-commit validations
        run: uv run pre-commit run --show-diff-on-failure --from-ref origin/HEAD --to-ref HEAD
      - name: build the cucu python package
        run: uv build
      - name: install cucu globally
        run: pip install dist/cucu-*.tar.gz

  test:
    needs: build
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12", "3.13", "3.14"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@d0cc045d04ccac9d8b7881df0226f9e82c39688e # v6
        with:
          version: "latest"

      - name: Sync Python runtime and install deps (dev)
        # uv will create and manage the virtual environment and install dev deps
        run: |
          uv sync -p ${{ matrix.python-version }} --dev

      - name: Run tests inside uv environment
        run: |
          uv run pytest -q

  detect-bump:
    needs: test
    name: Detect bump+log push on main
    runs-on: ubuntu-latest
    outputs:
      is_bump: ${{ steps.detect.outputs.is_bump }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Detect bump+log commit
        id: detect
        run: |
          python - <<'PY'
          import os, json
          ev = os.environ.get('GITHUB_EVENT_NAME','')
          ref = os.environ.get('GITHUB_REF','')
          is_bump = 'false'
          event_path = os.environ.get('GITHUB_EVENT_PATH')
          if event_path:
              with open(event_path, 'r') as f:
                  event = json.load(f)
              if ev == 'push' and ref == 'refs/heads/main':
                  head = event.get('head_commit') or {}
                  msg = (head.get('message') or '').lower()
                  if 'bump' in msg and 'log' in msg:
                      is_bump = 'true'
          # write output
          with open(os.environ['GITHUB_OUTPUT'], 'a') as out:
              out.write(f'is_bump={is_bump}\n')
          print('is_bump='+is_bump)
          PY

  trigger-tag-and-release:
    needs: detect-bump
    name: Trigger tag-and-release
    # Only run when the detect-bump job determined this was a bump+log commit
    if: ${{ needs.detect-bump.outputs.is_bump == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Notify bump+log commit
        run: |
          echo "Detected bump+log commit (${GITHUB_SHA:-${{ github.sha }}}). Running post-bump tasks."
      - name: trigger publish-release workflow
        run: |
          curl -X POST \
          -H "Authorization: token ${{ github.token }}" \
          -H "Accept: application/vnd.github+json" \
          https://api.github.com/repos/${GITHUB_REPOSITORY}/dispatches \
          -d '{"event_type": "Tag and Release (bot)"}'
